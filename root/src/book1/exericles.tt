[% WRAPPER 'wrappers/default.tt' %]
[% title = "Полезные функции" %]
<h4>Глава 1. Упр. 1</h4>
<p>Напишите программу для вычисления длины окружности радиусом 12.5. Длина окружности вычисляется как результат умно
жения 2π (примерно 2, умноженное на 3.141592654) на радиус. Результат должен быть равен примерно 78,5.</p>
<p>Путь - script/Exericles/Ex1/l1.pl</p>
<pre>

#!/usr/bin/perl
use warnings;
use strict;

my $pi = 3.141592;
my $R = 12.5;

print 2*$pi*$R."\n";
</pre>
<p>Измените программу из предыдущего упражнения так, чтобы она запрашивала и получала значение радиуса от пользователя, запустившего программу. Если пользователь введет 12.5, программа должна выдать такое же значение, как в предыдущем упражнении.</p>
<p>Путь - script/Exericles/Ex1/l2.pl</p>
<pre>
#!/usr/bin/perl
use warnings;
use strict;

my $pi = 3.141592;
chomp(my $R = <STDIN>);

print 2*$pi*$R."\n";
</pre>
<p>Измените программу из предыдущего упражнения так, чтобы при вводе отрицательного числа выдавался нуль (вместо отрицательной длины окружности).</p>
<p>Путь - script/Exericles/Ex1/l3.pl</p>
<pre>
#!/usr/bin/perl
use warnings;
use strict;

my $pi = 3.141592;
chomp(my $R = <STDIN>);
if ($R < 0){
    print "0"."\n";
} else {
    print 2*$pi*$R."\n";
}
</pre>
<p>Напишите программу, которая запрашивает и получает два числа (в разных строках ввода), а затем выводит их произведение.</p>
<p>Путь - script/Exericles/Ex1/l4.pl</p>
<pre>
#!/usr/bin/perl
use warnings;
use strict;

chomp(my $val1 = <STDIN>);
chomp(my $val2 = <STDIN>);

print $val1 + $val2 . "\n";
</pre>
<p>Напишите программу, которая запрашивает и получает строку и число (в разных строках ввода), а затем выводит строку указанное
число раз – в отдельных строках вывода. Скажем, если пользователь введет "fred" и "3", программа выводит три строки с текстом
«fred». Если пользователь введет "fred" и "299792", вывод получится довольно длинным.</p>
<p>Путь - script/Exericles/Ex1/l5.pl</p>
<pre>
#!/usr/bin/perl
use warnings;
use strict;

chomp(my $string = <STDIN>);
chomp(my $count = <STDIN>);

while ($count > 0){
    print $string."\n";
    $count--;
}
</pre>
[% END # wrapper %]