[% WRAPPER 'wrappers/default.tt' %]
[% title = "Скалярные данные" %]
<h4>Вещественные литералы</h4>
<pre>
	1.25
	200.000
	525.0
</pre>
<h4>Целочисленные литералы</h4>
<pre>
	0
	2016
	-45
	215
	123456798
</pre>
<p>Если число большое, то его можно разделить при помощи знака нижнего подчеркивания. Пример:</p>
<pre>
	123_456_789
</pre>

<h4>Литералы других систем счисления</h4>
<pre>
	0377       # 377 в восмеричной записи, тоже что 255 в десятичной
	0xff       # FF в шестьнадцатеричной записи, тоже что 255 в десятичной
        0b11111111 # тоже что 255 в десятичной
</pre>

<h4>Числовые операторы</h4>
<pre>
    2 + 5       # 2 плюс 5 = 7
    5.1 - 2.4   # 5.1 минус 2.4 = 2.7
    3 * 12      # 3 умножить на 12 = 36
    14 / 2      # 14 разделить на 2 = 7
    10.2 / 0.2  # 10.2 раделить на 0.2 = 51
    10 / 3      # 10 разделить на 3 = 3.33333
    10 % 3      # взять остаток от деления 10 на 3 = 1
    10.5 % 3.3  # то же что и 10 % 3
    2**3        # 2 возвести в 3 степень = 8
</pre>

<h4>Строковые литералы в апострофах</h4>
<pre>
    'hello'           # Пять символов: h, e, l, l, o
    'Hello world'     # 11 символов
    ''                # Пустая строка
    'hello\n'         # hello + косая черта и символ n (всего 7 символов)
    'hello
    world'            # hello + новая строка + world (всего 11 символов)
</pre>

<h4>Строковые литералы в кавычках</h4>
<pre>
    "hello"           # то же что и 'hello' (5 символов)
    "hello world\n"   # hello world и новая строка 
    "hello\tworld"    # hello + знак табуляции + world 
</pre>
<p>Управляющие комбинации для строковых литералов в кавычках</p>
<img src="[% ('/static/img/string_literals.png') %]" alt="">
<h4>Строковые операторы</h4>
<p>Конкатенация</p>
<pre>
    "hello" . "world"          # то же что и "helloworld"
    "hello" . ' ' . "world"    # то же что и "hello world"
    "hello world" . "\n"       # то же что и "hello world\n"
</pre>
<p>Оператор повторения строки</p>
<pre>
    "hello" x 3      # то же что и "hellohellohello"
    "hello" x (3+2)  # то же что и "hellohellohellohellohello"
    "hello" x 5.5    # усекается до целой части "hellohellohellohellohello"
    5 x 4            # 5 преобразуется в строку и повторяется 4 раза "5555"
</pre>
<h4>Скалярные переменные</h4>
<p>Пример переменных</p>
<pre>
    $hello          # Переменная с именем hello
    $_world         # Переменная с именем _world
    $hi1234         # Переменная с именем hi1234
    $123hello       # Ошибка переменная не должна начинаться с цифры
</pre>
<p>Пример присваивания переменным значения</p>
<pre>
    $one = 1            # Присвоить $one зачение 1
    $hi = 'hello'       # Присвоить $hi зачение 'hello'
    $five = $one + 4    # Присвоить $five зачение 5 
    $five = $five * 5   # Присвоить $five зачение 25
</pre>
<p>Бинарный оператор присваивания</p>
<pre>
    $one += 1         # То же самое что и $one = $one + 1 (2)
    $five *= 5        # То же самое что и $five = $five * 5 (25)
    $hi .= 'world'    # То же самое что и $hi = $hi . 'world' (helloworld)
    $five **= 2       # То же самое что и $five = $five ** 2 (25)
</pre>
<h4>Вывод командой print</h4>
<pre>
    print("hello")              # Выведет в консоль hello
    print "hello world"         # Выведет в консоль hello world
    print 6 * 5                 # Выведет в консоль 30
    print "hi", 5 * 5, world    # Выведет в консоль hi25world
</pre>
<p>Интерполяция переменных в строках</p>
<pre>
    $hi = 'hello'
    $hello_world = "$hi world"  # $hello_world содержит строку 'hello world'
</pre>
<p>Пример операторов сравнения</p>
<pre>
    35 == 54          #false
    53 == 53.0        #true
    '54' eq '54.0'    #false
</pre>
<img src="[% ('/static/img/bool_operators.png') %]" alt="">
<h4>Значени undef</h4>
<p>Если пересенная содержит значение undef, то при обращении к ней как к числу интерпретируется как 0, а если к строке то пустая строка</p>
<pre>
    $five += 5;       # Содержит 5, так как 0 + 5 = 5
    $name .= "Ivan";  # Содержит Ivan, так как '' . "Ivan" = "Ivan"
</pre>

[% END # wrapper %]